@inject IJSRuntime JSRuntime

<div class="col mod" align="center">    
    <div class="row">
        <div class="col">
            <img class="@Model.GetStyle()" src="images/mods/@(Model.Image)" @onmouseover="MouseOver" @onmouseout="MouseOut" @onclick="Click" /></div>
        </div>
    <div class="row"><span class="mod-name @(Model.Fade ? "faded" : "")">@Model.Name</span></div>
    <div class="row justify-content-center">
        <div class="col" style="display: contents">
        @foreach (var reward in Model.GetImageUrls(group: true, imgStyle: "small-image"))
        {
            @((MarkupString)reward);
        }   
        </div>
    </div>      
</div> 

@code {

    [Parameter]
    public ArchnemesisModViewModel Model { get; set; }
    [Parameter]
    public Action<ArchnemesisModViewModel, MouseEventArgs> OnHighlightHandler { get; set; }

    void MouseOver(MouseEventArgs e)
    {
        Model.MouseOver = true;
        OnHighlightHandler(Model, null);
    }

    void MouseOut(MouseEventArgs e)
    {           
        Model.MouseOver = false;
        OnHighlightHandler(Model, null);
    }

    async void Click(MouseEventArgs e)
    {
        if (e.Detail > 1)
        {
            await JSRuntime.InvokeVoidAsync("copyClipboard", $"^{Model.Regex}");
        }
        else
        {
            Model.Selected = !Model.Selected;
            OnHighlightHandler(Model, e);    
        }                                    
    }
}
