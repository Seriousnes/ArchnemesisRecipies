@inject IJSRuntime JSRuntime

@if (Model is not null)
{
    <div class="">
        <div class="row" @onclick="CopyRegex">
            <h2 class="mod-name" data-bs-toggle="tooltip" data-bs-placement="top" title="^@Model.Regex">
                <Image Model=Model ShowName=true />
            </h2>            
        </div>
        @if (!string.IsNullOrEmpty(Model.Mod))
        {
            <div class="row pb-1">
                <div class="col">
                    <span class="mod">@Model.Mod</span>    
                </div>
            </div>
        }
        @if (!string.IsNullOrEmpty(Model.Effect))
        {
            <div class="row pb-1">
                <div class="col">
                    <span class="effects">@Model.Effect</span>    
                </div>
            </div>
        }
        @if (!string.IsNullOrEmpty(Model.Type))
        {
            <div class="row justify-content-start align-items-center">
                <div class="col-md-auto">
                    <span class="rewards">Rewards:</span>
                </div>
                <div class="col">
                    @foreach (var reward in Model.GetImageUrls(group: false))
                    {
                        @((MarkupString)reward)
                    }        
                </div>                
            </div>   
        }
        @if (Model.Components.Any())
        {
            <ModDetailComponents Components=Model.Components OnClick=Click>
                <Title>
                    <span class="builds-from">Builds from</span>
                </Title>
            </ModDetailComponents>  
        }
        @if (Model.ComponentOf.Any())
        {
            <ModDetailComponents Components=Model.ComponentOf OnClick=Click>
                <Title>
                    <span class="builds-into">Builds into</span>
                </Title>
            </ModDetailComponents>
        }        
    </div>
}

@code {
    [Parameter]
    public ArchnemesisModViewModel Model { get; set; }

    [Parameter]
    public Action<ArchnemesisModViewModel, MouseEventArgs> OnClick { get; set; }

    private async void CopyRegex()
    {
        await JSRuntime.InvokeVoidAsync("copyClipboard", $"^{Model.Regex}");
    }

    public void SetModel(ArchnemesisModViewModel model)
    {
        this.Model = model;
        StateHasChanged();
    }

    void Click(ArchnemesisModViewModel mod, MouseEventArgs e = null)
    {
        mod.Selected = true;
        OnClick(mod, e);
    } 
}
